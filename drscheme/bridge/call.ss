(module call mzscheme
  (require (lib "class.ss"))
  (require (lib "mred.ss" "mred"))
  (require (lib "1.ss" "srfi"))
  (provide frobotzle)
  
  (define frobotzle
    (lambda ()
      (let* ((dialog (instantiate dialog% () (label "Make a call.")))
             (column (instantiate vertical-pane% ()
                       (parent dialog)))

             ;; alist, each elt looks like (3 . <horizontal-pane%>)
             (bids (map (lambda (level)
                          (cons level (instantiate horizontal-pane% ()
                                        (parent column))))
                        (iota 7 1)))
             (doubles-and-pass (instantiate horizontal-pane% ()
                                 (parent column)))
             (choice #f))
        (define make-bid-button
          (lambda (label parent)
            (instantiate button% () (label label)
                         (parent parent)
                         (callback (lambda (button control-event-object)
                                     (set! choice label)
                                     (send dialog show #f))))))
        (define dummy-callback (lambda (button control-event-object)
                                 (void)))
        
        (for-each (lambda (label)
                    (instantiate button% ()
                      (label label)
                      (parent doubles-and-pass)
                      (callback dummy-callback)))
                  `("Double" "Redouble" "Pass" "Oh Piss Off"))

        (for-each (lambda (level/pane-pair)
                    (for-each (lambda (denom)
                                (make-bid-button (format "~A ~A" denom (car level/pane-pair)) 
                                                 (cdr level/pane-pair)))
                              `(clubs diamonds hearts spades notrump)))
                  bids)
        (send dialog show #t)
        choice)))

  (printf "~A~%" (frobotzle)))
