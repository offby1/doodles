'From Squeak3.8 of ''5 May 2005'' [latest update: #6665] on 9 July 2005 at 10:35:50 am'!TestCase subclass: #BagTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Anagrams'!!BagTest commentStamp: '<historical>' prior: 0!Test bags, particularly their creation from strings, and subtraction.!!BagTest methodsFor: 'sanity' stamp: 'edh 7/8/2005 07:59'!testSanity        "See if I can figure out how to use SUnit"        | b |        b := Bag newFrom: 'xyz'.        self assert: (b includes: $x).        self assert: (b includes: $y).        self assert: (b includes: $z).        self assert: (b includes: $w) not.! !!BagTest methodsFor: 'sanity' stamp: 'edh 7/9/2005 09:32'!testSubtraction	"Subtracting bag B from bag A should return	a new bag that is a proper subset of A"	| a b expected actual |	Transcript clear.	a := Bag newFrom: 'abcxyz000'.	b := Bag newFrom: 'xyz'.	expected := Bag newFrom: 'abc000'.	actual := a subtract: b.	self assert: expected = actual.	b add: $0.	expected remove: $0.	actual := a subtract: b.	self assert: expected = actual.	expected := Bag new.	actual := a subtract: a.	self assert: expected = actual.	expected_nil.	actual_Bag new subtract: (Bag newFrom: 'x').	self assert: expected = actual.! !BagTest removeSelector: #testGoofy!!BagTest reorganize!('sanity' testSanity testSubtraction)!