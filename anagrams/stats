home machine:
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 15
model           : 2
model name      : Intel(R) Pentium(R) 4 CPU 2.40GHz
stepping        : 7
cpu MHz         : 2391.191
cache size      : 512 KB
fdiv_bug        : no
hlt_bug         : no
f00f_bug        : no
coma_bug        : no
fpu             : yes
fpu_exception   : yes
cpuid level     : 2
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe cid
bogomips        : 4771.02
-----

time ./anagrams  > /dev/null

All times are on the home machine, unless otherwise noted.

For testing a new implementation, note that /usr/share/dict/words
should wind up with 72717 words (66890 distinct bags), and after
pruning for "Ernest Hemingway", it should have 1716 entries.

"Correct answer" basically means "did it get the same results as the Common Lisp version?"

+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|language         |correct|time           |time "st       |time "est      |time "Ernes      |time "Ernest     |bag           |dictionary    |
|                 |answer?|"hemingway"    |hemingway"     |hemingway"     |Hemingway"       |Hemingway"       |implementation|cached?       |
|                 |       |               |               |               |(113466 anagrams)|(457602 anagrams)|              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|      common lisp|yes    |               |               |               |                 |                 |bignums       |yes           |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|sbcl             |       |               |               |               |                 |7 user seconds   |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|cmucl            |       |1 seconds      |2 seconds      |               |                 |10 user seconds  |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|clisp            |       |               |               |               |                 |20 user seconds  |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|          schemes|       |               |               |               |                 |                 |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|mzscheme v301.4  |yes    |               |               |               |10 user seconds  |40 user seconds  |bignums       |no            |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|bigloo 2.8a      |yes    |               |               |               |14 user seconds  |runs outta memory|strings       |yes           |
|                 |       |               |               |               |                 |                 |              |              |
|                 |       |               |               |               |                 |                 |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|mit-scheme 7.7.90|       |               |               |15 user seconds|40 user seconds  |180 user seconds |bignums       |no            |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|gambit 4b17      |not    |5 user seconds |6 user seconds |9 user seconds |41 user seconds  |200 user seconds |bignums       |no            |
|                 |quite  |               |               |               |                 |                 |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|scheme48 1.3     |no     |               |               |16 user seconds|55 user seconds  |272 user seconds |bignums       |no(!)         |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|chicken (302)    |no     |3 user seconds |6 user seconds |14 user seconds|                 |420 user seconds |strings       |yes           |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|guile 1.7 (gmp)  |no; way|               |               |40 user seconds|                 |2400 user seconds|bignums       |yes           |
|                 |too    |               |               |               |                 |                 |              |              |
|                 |many   |               |               |               |                 |                 |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|gauche 0.8.3     |no     |8 user seconds |16 userseconds |46 user seconds|                 |9400 seconds(!)  |bignums       |no            |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|scsh             |no     |48 user seconds|80 seconds     |107 seconds    |                 |                 |bignums       |yes (code too)|
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|             misc|       |               |               |               |                 |                 |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|haskell (ghc     |yes    |               |               |               |                 |30 user seconds  |bignums       |no            |
|6.6) -O          |       |               |               |               |                 |                 |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|c++ (-O2)        |yes    |               |               |               |                 |90 user seconds  |bignums       |no            |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|python           |       |4 seconds      |6 seconds      |15 user seconds|                 |270 user seconds |bignums       |no            |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|perl5            |not    |               |               |18 user seconds|                 |300 user seconds |strings       |yes           |
|                 |quite  |               |               |               |                 |                 |              |              |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+
|ruby             |       |8 seconds      |14 user seconds|37 user seconds|                 |960 user seconds |bignums       |yes           |
+-----------------+-------+---------------+---------------+---------------+-----------------+-----------------+--------------+--------------+

---
Note: when gathering data to fill in the above, be sure that none of
the programs or libraries were compiled for profiling -- because they
run much slower than normal libraries.

The really interesting question isn't so much "how fast is this
language", but rather "does this language have an easy-to-use
profiler".  So far, the answer in most cases has been "no" :-| 

* C++ has gperf, which takes a bit of doing, but provides useful numbers; 

* some of the Common Lisps have something similar

* most of the Schemes, python, and ruby have nothing, so far as I can
  tell

* mzscheme has a decent one, which you activate by requiring
  errortrace.ss, then turning on a bunch of profiling parameters

* Haskell's profiler was quite easy to use

For comparison, note that the program "an"
(http://ftp.debian.org/pool/main/a/an/) appears to be about three
times faster than my SBCL version:

time an -m 2 -l 4  "Intelligent Design" | LANG= wc
=>
 291684 1158130 6532034

real	0m1.536s
user	0m1.464s
sys	0m0.032s

whereas

(time (length (remove-if-not #'(lambda (seq) (= 4 (length seq))) (anagrams::anagrams "Intelligent Design"))))
=>
Evaluation took:
  4.483 seconds of real time
  4.232265 seconds of user run time
  0.212013 seconds of system run time
  0 page faults and
  228,563,456 bytes consed.
105533

So: 1.5 seconds versus my 4.2 seconds, and it found 300,000 results
whereas I found only 100,000.  Hmph.
